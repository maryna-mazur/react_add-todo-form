{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","todoUser","email","name","className","href","TodoInfo","todo","id","title","completed","user","classNames","TodoList","todos","map","username","userId","usersFromServer","find","App","useState","newTodoTitle","setNewTodoTitle","usersList","unshift","selectedUserId","setSelectedUserId","visibleTodos","setVisibleTodos","submit","setSubmit","hasErrorTitle","hasErrorUser","newTodo","sort","todo1","todo2","person","getUserId","action","method","onSubmit","event","preventDefault","newVisibleTodo","type","value","placeholder","onChange","target","indexOf","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c5585cb.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  todoUser: User | null | undefined;\n};\n\nexport const UserInfo:React.FC<Props> = ({ todoUser }) => {\n  const { email, name } = todoUser as User;\n\n  return (\n    <>\n      {todoUser && (\n        <a className=\"UserInfo\" href={`mailto:${email}`}>\n          {name}\n        </a>\n      )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo todoUser={user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"TodoList\">\n    {todos.map(todo => (\n      <li key={todo.id}>\n        <TodoInfo todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const usersList = [...usersFromServer].map(user => user.name);\n\n  usersList.unshift('Choose a user');\n\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [submit, setSubmit] = useState(false);\n\n  const hasErrorTitle = newTodoTitle === '';\n  const hasErrorUser = selectedUserId === 0;\n\n  const getTodoId = () => (\n    todos.sort((todo1, todo2) => todo2.id - todo1.id)[0].id + 1\n  );\n\n  const getUserId = () => {\n    const user = [...usersFromServer]\n      .find(person => person.id === selectedUserId);\n\n    if (user) {\n      return user.id;\n    }\n\n    return null;\n  };\n\n  const findUser = () => (\n    usersFromServer.find(user => user.id === selectedUserId)\n  );\n\n  const newTodo = {\n    id: getTodoId(),\n    title: newTodoTitle,\n    userId: getUserId(),\n    completed: false,\n    user: findUser(),\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          setSubmit(true);\n          if (!hasErrorUser && !hasErrorTitle) {\n            const newVisibleTodo = [\n              ...visibleTodos,\n              newTodo,\n            ];\n\n            setVisibleTodos(newVisibleTodo);\n            setNewTodoTitle('');\n            setSelectedUserId(0);\n            setSubmit(false);\n          }\n        }}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={newTodoTitle}\n              placeholder=\"Enter a title\"\n              onChange={(event) => {\n                setNewTodoTitle(event.target.value);\n              }}\n            />\n          </label>\n          {(hasErrorTitle && submit) && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              name=\"selectedUser\"\n              value={selectedUserId}\n              onChange={(event) => {\n                setSelectedUserId(+event.target.value);\n              }}\n            >\n              {usersList.map(user => (\n                <option\n                  key={user}\n                  value={usersList.indexOf(user)}\n                  disabled={usersList.indexOf(user) === 0}\n                >\n                  {user}\n                </option>\n              ))}\n\n            </select>\n          </label>\n\n          {(hasErrorUser && submit) && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}