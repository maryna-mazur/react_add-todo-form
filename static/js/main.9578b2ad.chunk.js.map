{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","todoUser","className","href","email","undefined","name","TodoInfo","todo","id","title","completed","user","classNames","TodoList","todos","style","listStyleType","padding","map","username","userId","usersFromServer","find","App","useState","newTodoTitle","setNewTodoTitle","usersList","unshift","selectedUser","setSelectedUser","selectUserName","setSelectedUserName","visibleTodos","setVisibleTodos","clicked","setClicked","hasErrorTitle","hasErrorUser","newTodo","sort","todo1","todo2","getUserId","action","method","onSubmit","event","preventDefault","newVisibleTodo","type","value","placeholder","onChange","target","selectedOptions","innerText","indexOf","disabled","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9578b2ad.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  todoUser: User | null | undefined,\n};\n\nexport const UserInfo:React.FC<Props> = ({ todoUser }) => {\n  return (\n    <a className=\"UserInfo\" href={todoUser ? (todoUser.email) : undefined}>\n      {todoUser ? (todoUser.name) : undefined}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo todoUser={user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const styleTextDecotationNone = {\n    listStyleType: 'none',\n    padding: 0,\n  };\n\n  return (\n    <section className=\"TodoList\">\n      <ul style={styleTextDecotationNone}>\n        {todos.map(todo => (\n          <li key={todo.id}>\n            <TodoInfo todo={todo} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const usersList = [...usersFromServer].map(user => user.name);\n\n  usersList.unshift('Choose a user');\n\n  const [selectedUser, setSelectedUser] = useState('0');\n  const [selectUserName, setSelectedUserName] = useState('');\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [clicked, setClicked] = useState(false);\n  const hasErrorTitle = clicked && !newTodoTitle;\n  const hasErrorUser = clicked && selectedUser === '0';\n\n  const getTodoId = () => (\n    todos.sort((todo1, todo2) => todo2.id - todo1.id)[0].id + 1\n  );\n\n  const getUserId = () => {\n    const userId = [...usersFromServer]\n      .find(user => user.name === selectUserName);\n\n    if (userId) {\n      return userId.id;\n    }\n\n    return null;\n  };\n\n  const findUser = () => (\n    usersFromServer.find(user => user.name === selectUserName)\n  );\n\n  const newTodo = {\n    id: getTodoId(),\n    title: newTodoTitle,\n    userId: getUserId(),\n    completed: false,\n    user: findUser(),\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (clicked && !hasErrorUser && !hasErrorTitle) {\n            const newVisibleTodo = [\n              ...visibleTodos,\n              newTodo,\n            ];\n\n            setVisibleTodos(newVisibleTodo);\n            setNewTodoTitle('');\n            setSelectedUser('0');\n            setClicked(false);\n          }\n        }}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={newTodoTitle}\n              placeholder=\"Enter a title\"\n              onChange={(event) => {\n                setNewTodoTitle(event.target.value);\n              }}\n            />\n          </label>\n          {hasErrorTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              name=\"selectedUser\"\n              value={selectedUser}\n              onChange={(event) => {\n                setSelectedUser(event.target.value);\n                setSelectedUserName(event.target.selectedOptions[0].innerText);\n              }}\n            >\n              {usersList.map(user => (\n                <option\n                  key={user}\n                  value={usersList.indexOf(user)}\n                  disabled={usersList.indexOf(user) === 0}\n                >\n                  {user}\n                </option>\n              ))}\n\n            </select>\n          </label>\n\n          {hasErrorUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={() => {\n            setClicked(true);\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}